"undefined"!=typeof process&&require("amd-loader");var EditSession=require("../edit_session").EditSession,VBScriptMode=require("./vbscript").Mode,assert=require("../test/assertions");module.exports={setUp:function(){this.mode=new VBScriptMode},"test: getNextLineIndent":function(){assert.equal(this.mode.getNextLineIndent("start","Class ClassName","  "),"  "),assert.equal(this.mode.getNextLineIndent("start","  Public Default Function FunctionName(param)","  "),"    "),assert.equal(this.mode.getNextLineIndent("start","  If Answer <> vbOK Then Exit Sub","  "),"  "),assert.equal(this.mode.getNextLineIndent("start","  If Condition Then","  "),"    ")},"test: checkOutdent":function(){assert.ok(this.mode.checkOutdent("start","        End If","\n")),assert.ok(this.mode.checkOutdent("start","        Loop","\n")),assert.equal(this.mode.checkOutdent("start","  Class blabla","\n"),!1),assert.equal(this.mode.checkOutdent("start","","\r"),!1)},"test: auto outdent":function(){var e=new EditSession(["Class ClassName","  some code","  End Class"]);e.setMode(this.mode),this.mode.autoOutdent("start",e,2),assert.equal("End Class",e.getLine(2))},"test: opening/ending tags matching":function(){var e=new EditSession(["Sub Name(attr)","   If Condition Then ","      some code","   ElseIf condition2","      another code","   ElseIf condition3","      another code","   Else","      another code","   End If","End Sub"]),t=(e.setMode(this.mode),this.mode.getMatching(e,0,0));assert.range(t[0],0,0,0,3),assert.range(t[1],10,0,10,7),t=this.mode.getMatching(e,10,1),assert.range(t[1],0,0,0,3),assert.range(t[0],10,0,10,7),t=this.mode.getMatching(e,1,4),assert.range(t[0],1,3,1,5),assert.range(t[1],9,3,9,9),t=this.mode.getMatching(e,9,8),assert.range(t[1],1,3,1,5),assert.range(t[0],9,3,9,9),t=this.mode.getMatching(e,3,4),assert.range(t[0],3,3,3,9),assert.range(t[1],5,3,5,9),t=this.mode.getMatching(e,5,4),assert.range(t[0],5,3,5,9),assert.range(t[1],7,3,7,7)},"test: single line condition couldn't have closing tag":function(){var e=new EditSession(["Sub Name(attr)","   If Condition Then ","       If Condition Then Exit Sub","   End If","End Sub"]),t=(e.setMode(this.mode),this.mode.getMatching(e,2,8));assert.equal(t,void 0),t=this.mode.getMatching(e,1,4),assert.range(t[0],1,3,1,5),assert.range(t[1],3,3,3,9),t=this.mode.getMatching(e,3,4),assert.range(t[1],1,3,1,5),assert.range(t[0],3,3,3,9),t=this.mode.getMatching(e,4,1),assert.range(t[1],0,0,0,3),assert.range(t[0],4,0,4,7)},"test: private and public properties/subs/functions should return matching tag":function(){var e=new EditSession(["Class ClassName","   Public Property Get PropertyName","       some code","   End Property","","   Private Function FunctionName(value1, value2)","       some code","   End Function","End Class"]),t=(e.setMode(this.mode),this.mode.getMatching(e,1,11));assert.range(t[0],1,10,1,18),assert.range(t[1],3,3,3,15),t=this.mode.getMatching(e,3,5),assert.range(t[1],1,10,1,18),assert.range(t[0],3,3,3,15),t=this.mode.getMatching(e,5,14),assert.range(t[0],5,11,5,19),assert.range(t[1],7,3,7,15),t=this.mode.getMatching(e,7,4),assert.range(t[1],5,11,5,19),assert.range(t[0],7,3,7,15)},"test: wrong closing/opening tag":function(){var e=new EditSession(["Class ClassName","   Public Property Get PropertyName","       some code","   End Class","","   Private Property FunctionName(value1, value2)","       some code","   End AnyWord","End Class"]),t=(e.setMode(this.mode),this.mode.getMatching(e,1,11));assert.equal(t.length,1),assert.range(t[0],3,3,3,12),t=this.mode.getMatching(e,7,4),assert.equal(t.length,1),assert.range(t[0],5,11,5,19),t=this.mode.getMatching(e,0,3),assert.range(t[0],0,0,0,5),assert.range(t[1],8,0,8,9)}},"undefined"!=typeof module&&module===require.main&&require("asyncjs").test.testcase(module.exports).exec();