"undefined"!=typeof process&&require("amd-loader");var CoffeeMode=require("../coffee").Mode,EditSession=require("../../edit_session").EditSession,assert=require("../../test/assertions");function testFoldWidgets(e){var s=e.filter(function(e,t){return t%2==1}),s=new EditSession(s),t=new CoffeeMode,t=(s.setFoldStyle("markbeginend"),s.setMode(t),e.filter(function(e,t){return t%2==0}));function o(e,t){e&&(e="l"==e?s.getLine(t.row).length:parseInt(e),assert.equal(t.column,e))}t.forEach(function(e,t){s.foldWidgets[t]=s.getFoldWidget(t)}),t.forEach(function(e,t){var n=">"==(e=e.split(","))[0]?"start":"<"==e[0]?"end":"";assert.equal(s.foldWidgets[t],n),n&&(n=s.getFoldWidgetRange(t),e[1]?(assert.equal(n.start.row,t),assert.equal(n.end.row-n.start.row,parseInt(e[1])),o(e[2],n.start),o(e[3],n.end)):assert.equal(n,null))})}module.exports={"test: coffee script indentation based folding":function(){testFoldWidgets([">,1,l,l"," ## indented comment","","  # ","","",">,1,l,l"," # plain comment",""," # ",">,2"," function (x)=>","","  ","","  x++","","  ","","  ",">,2"," bar = ","","   foo: 1","","   baz: lighter"])}},"undefined"!=typeof module&&module===require.main&&require("asyncjs").test.testcase(module.exports).exec();