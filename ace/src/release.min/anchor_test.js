"undefined"!=typeof process&&require("amd-loader");var Document=require("./document").Document,Anchor=require("./anchor").Anchor,Range=require("./range").Range,assert=require("./test/assertions");module.exports={"test create anchor":function(){var n=new Document("juhu"),e=new Anchor(n,0,0);assert.position(e.getPosition(),0,0),assert.equal(e.getDocument(),n)},"test insert text in same row before cursor should move anchor column":function(){var n=new Document("juhu\nkinners"),e=new Anchor(n,1,4);n.insert({row:1,column:1},"123"),assert.position(e.getPosition(),1,7)},"test insert text at anchor should not move anchor when insertRight is true":function(){var n=new Document("juhu\nkinners"),e=new Anchor(n,1,4);e.$insertRight=!0,n.insert({row:1,column:4},"123"),assert.position(e.getPosition(),1,4)},"test insert lines before cursor should move anchor row":function(){var n=new Document("juhu\nkinners"),e=new Anchor(n,1,4);n.insertFullLines(1,["123","456"]),assert.position(e.getPosition(),3,4)},"test insert lines at anchor position should move anchor down":function(){var n=new Document("juhu\nkinners"),e=new Anchor(n,1,0);n.insertLines(1,["line"]),assert.position(e.getPosition(),2,0)},"test insert lines at anchor position should not move anchor down when insertRight is true and column is 0":function(){var n=new Document("juhu\nkinners"),e=new Anchor(n,1,0);e.$insertRight=!0,n.insertLines(1,["line"]),assert.position(e.getPosition(),1,0)},"test insert lines at anchor row should move anchor down when column > 0":function(){var n=new Document("juhu\nkinners"),e=new Anchor(n,1,2);e.$insertRight=!0,n.insertLines(1,["line"]),assert.position(e.getPosition(),2,2)},"test insert new line before cursor should move anchor column":function(){var n=new Document("juhu\nkinners"),e=new Anchor(n,1,4);n.insertMergedLines({row:0,column:0},["",""]),assert.position(e.getPosition(),2,4)},"test insert new line in anchor line before anchor should move anchor column and row":function(){var n=new Document("juhu\nkinners"),e=new Anchor(n,1,4);n.insertMergedLines({row:1,column:2},["",""]),assert.position(e.getPosition(),2,2)},"test delete text in anchor line before anchor should move anchor column":function(){var n=new Document("juhu\nkinners"),e=new Anchor(n,1,4);n.remove(new Range(1,1,1,3)),assert.position(e.getPosition(),1,2)},"test remove range which contains the anchor should move the anchor to the start of the range":function(){var n=new Document("juhu\nkinners"),e=new Anchor(n,0,3);n.remove(new Range(0,1,1,3)),assert.position(e.getPosition(),0,1)},"test delete character before the anchor should have no effect":function(){var n=new Document("juhu\nkinners"),e=new Anchor(n,1,4);n.remove(new Range(1,4,1,5)),assert.position(e.getPosition(),1,4)},"test delete lines in anchor line before anchor should move anchor row":function(){var n=new Document("juhu\n1\n2\nkinners"),e=new Anchor(n,3,4);n.removeFullLines(1,2),assert.position(e.getPosition(),1,4)},"test remove new line before the cursor":function(){var n=new Document("juhu\nkinners"),e=new Anchor(n,1,4);n.removeNewLine(0),assert.position(e.getPosition(),0,8)},"test delete range which contains the anchor should move anchor to the end of the range":function(){var n=new Document("juhu\nkinners"),e=new Anchor(n,1,4);n.remove(new Range(0,2,1,2)),assert.position(e.getPosition(),0,4)},"test delete line which contains the anchor should move anchor to the end of the range":function(){var n=new Document("juhu\nkinners\n123"),e=new Anchor(n,1,5);n.removeFullLines(1,1),assert.position(e.getPosition(),1,0)},"test remove after the anchor should have no effect":function(){var n=new Document("juhu\nkinners\n123"),e=new Anchor(n,1,2);n.remove(new Range(1,4,2,2)),assert.position(e.getPosition(),1,2)},"test anchor changes triggered by document changes should emit change event":function(e){var n=new Document("juhu\nkinners\n123"),o=new Anchor(n,1,5);o.on("change",function(n){assert.position(o.getPosition(),0,0),e()}),n.remove(new Range(0,0,2,1))},"test only fire change event if position changes":function(){var n=new Document("juhu\nkinners\n123");new Anchor(n,1,5).on("change",function(n){assert.fail()}),n.remove(new Range(2,0,2,1))},"test insert/remove lines at the end of the document":function(){var n=new Document("juhu\nkinners\n123"),e=new Anchor(n,2,4);n.removeFullLines(0,3),assert.position(e.getPosition(),0,0),n.insertFullLines(0,["a","b","c"]),assert.position(e.getPosition(),3,0),assert.equal(n.getValue(),"a\nb\nc\n")}},"undefined"!=typeof module&&module===require.main&&require("asyncjs").test.testcase(module.exports).exec();