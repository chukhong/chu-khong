"undefined"!=typeof process&&require("amd-loader");var editor,iSearch,emacs=require("./keyboard/emacs"),EditSession=require("./edit_session").EditSession,Editor=require("./editor").Editor,MockRenderer=require("./test/mockrenderer").MockRenderer,Range=require("./range").Range,MultiSelect=require("./multi_select").MultiSelect,assert=require("./test/assertions"),IncrementalSearch=require("./incremental_search").IncrementalSearch;function testRanges(e,t){t=t||editor.selection.getAllRanges(),assert.equal(t+"",e+"")}function callHighlighterUpdate(){var e=editor.session,a=[];return e.$isearchHighlight.update([],{drawSingleLineMarker:function(e,t){a=a.concat(t)}},e,{firstRow:0,lastRow:e.getRowLength()}),a}require("./multi_select"),module.exports={name:"ACE incremental_search.js",setUp:function(){var e=new EditSession(["abc123","xyz124"]);editor=new Editor(new MockRenderer,e),new MultiSelect(editor),iSearch=new IncrementalSearch},"test: keyboard handler setup":function(){iSearch.activate(editor),assert.equal(editor.getKeyboardHandler(),iSearch.$keyboardHandler),iSearch.deactivate(),assert.notEqual(editor.getKeyboardHandler(),iSearch.$keyboardHandler)},"test: isearch highlight setup":function(){var e=editor.session,t=(iSearch.activate(editor),iSearch.highlight("foo"),e.$isearchHighlight.id),e=(assert.ok(e.$isearchHighlight,"session has no isearch highlighter"),assert.equal(e.getMarkers()[t.id],t.id,"isearch highlight not in markers"),iSearch.deactivate(),iSearch.activate(editor),iSearch.highlight("bar"),e.$isearchHighlight.id);assert.equal(e,t,"multiple isearch highlights")},"test: find simple text incrementally":function(){iSearch.activate(editor);var e=iSearch.addString("1"),t=callHighlighterUpdate();testRanges("Range: [0/3] -> [0/4]",[e]),testRanges("Range: [0/3] -> [0/4],Range: [1/3] -> [1/4]",t),e=iSearch.addString("2"),t=callHighlighterUpdate(),testRanges("Range: [0/3] -> [0/5]",[e]),testRanges("Range: [0/3] -> [0/5],Range: [1/3] -> [1/5]",t),e=iSearch.addString("3"),t=callHighlighterUpdate(),testRanges("Range: [0/3] -> [0/6]",[e]),testRanges("Range: [0/3] -> [0/6]",t),e=iSearch.removeChar(),t=callHighlighterUpdate(),testRanges("Range: [0/3] -> [0/5]",[e]),testRanges("Range: [0/3] -> [0/5],Range: [1/3] -> [1/5]",t)},"test: forward / backward":function(){iSearch.activate(editor),iSearch.addString("1"),iSearch.addString("2"),testRanges("Range: [1/3] -> [1/5]",[iSearch.next()]),testRanges("",[iSearch.next()]),testRanges("Range: [1/5] -> [1/3]",[iSearch.next({backwards:!0})])},"test: cancelSearch":function(){iSearch.activate(editor),iSearch.addString("1"),iSearch.addString("2"),testRanges("Range: [0/0] -> [0/0]",[iSearch.cancelSearch(!0)]),iSearch.addString("1"),testRanges("Range: [0/3] -> [0/5]",[iSearch.addString("2")])},"test: failing search keeps pos":function(){iSearch.activate(editor),iSearch.addString("1"),iSearch.addString("2"),testRanges("",[iSearch.addString("x")]),assert.position(editor.getCursorPosition(),0,5)},"test: backwards search":function(){editor.moveCursorTo(1,0),iSearch.activate(editor,!0),iSearch.addString("1"),testRanges("Range: [0/5] -> [0/3]",[iSearch.addString("2")]),assert.position(editor.getCursorPosition(),0,3)},"test: forwards then backwards, same result, reoriented range":function(){iSearch.activate(editor),iSearch.addString("1"),testRanges("Range: [0/3] -> [0/5]",[iSearch.addString("2")]),assert.position(editor.getCursorPosition(),0,5),testRanges("Range: [0/5] -> [0/3]",[iSearch.next({backwards:!0})]),assert.position(editor.getCursorPosition(),0,3)},"test: reuse prev search via option":function(){iSearch.activate(editor),iSearch.addString("1"),iSearch.addString("2"),assert.position(editor.getCursorPosition(),0,5),iSearch.deactivate(),iSearch.activate(editor),iSearch.next({backwards:!1,useCurrentOrPrevSearch:!0}),assert.position(editor.getCursorPosition(),1,5)},"test: don't extend selection range if selection is empty":function(){iSearch.activate(editor),iSearch.addString("1"),iSearch.addString("2"),testRanges("Range: [0/5] -> [0/5]",[editor.getSelectionRange()])},"test: extend selection range if selection exists":function(){iSearch.activate(editor),editor.selection.selectTo(0,1),iSearch.addString("1"),iSearch.addString("2"),testRanges("Range: [0/0] -> [0/5]",[editor.getSelectionRange()])},"test: extend selection in emacs mark mode":function(){var e=require("./keyboard/emacs");editor.keyBinding.addKeyboardHandler(e.handler),e.handler.commands.setMark.exec(editor),iSearch.activate(editor),iSearch.addString("1"),iSearch.addString("2"),testRanges("Range: [0/0] -> [0/5]",[editor.getSelectionRange()])}},"undefined"!=typeof module&&module===require.main&&require("asyncjs").test.testcase(module.exports).exec();