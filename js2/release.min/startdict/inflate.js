var MAX_WBITS=15,DEF_WBITS=MAX_WBITS,MAX_MEM_LEVEL=9,MANY=1440,BMAX=15,PRESET_DICT=32,Z_NO_FLUSH=0,Z_PARTIAL_FLUSH=1,Z_SYNC_FLUSH=2,Z_FULL_FLUSH=3,Z_FINISH=4,Z_DEFLATED=8,Z_OK=0,Z_STREAM_END=1,Z_NEED_DICT=2,Z_ERRNO=-1,Z_STREAM_ERROR=-2,Z_DATA_ERROR=-3,Z_MEM_ERROR=-4,Z_BUF_ERROR=-5,Z_VERSION_ERROR=-6,METHOD=0,FLAG=1,DICT4=2,DICT3=3,DICT2=4,DICT1=5,DICT0=6,BLOCKS=7,CHECK4=8,CHECK3=9,CHECK2=10,CHECK1=11,DONE=12,BAD=13,inflate_mask=[0,1,3,7,15,31,63,127,255,511,1023,2047,4095,8191,16383,32767,65535],IB_TYPE=0,IB_LENS=1,IB_STORED=2,IB_TABLE=3,IB_BTREE=4,IB_DTREE=5,IB_CODES=6,IB_DRY=7,IB_DONE=8,IB_BAD=9,fixed_bl=9,fixed_bd=5,fixed_tl=[96,7,256,0,8,80,0,8,16,84,8,115,82,7,31,0,8,112,0,8,48,0,9,192,80,7,10,0,8,96,0,8,32,0,9,160,0,8,0,0,8,128,0,8,64,0,9,224,80,7,6,0,8,88,0,8,24,0,9,144,83,7,59,0,8,120,0,8,56,0,9,208,81,7,17,0,8,104,0,8,40,0,9,176,0,8,8,0,8,136,0,8,72,0,9,240,80,7,4,0,8,84,0,8,20,85,8,227,83,7,43,0,8,116,0,8,52,0,9,200,81,7,13,0,8,100,0,8,36,0,9,168,0,8,4,0,8,132,0,8,68,0,9,232,80,7,8,0,8,92,0,8,28,0,9,152,84,7,83,0,8,124,0,8,60,0,9,216,82,7,23,0,8,108,0,8,44,0,9,184,0,8,12,0,8,140,0,8,76,0,9,248,80,7,3,0,8,82,0,8,18,85,8,163,83,7,35,0,8,114,0,8,50,0,9,196,81,7,11,0,8,98,0,8,34,0,9,164,0,8,2,0,8,130,0,8,66,0,9,228,80,7,7,0,8,90,0,8,26,0,9,148,84,7,67,0,8,122,0,8,58,0,9,212,82,7,19,0,8,106,0,8,42,0,9,180,0,8,10,0,8,138,0,8,74,0,9,244,80,7,5,0,8,86,0,8,22,192,8,0,83,7,51,0,8,118,0,8,54,0,9,204,81,7,15,0,8,102,0,8,38,0,9,172,0,8,6,0,8,134,0,8,70,0,9,236,80,7,9,0,8,94,0,8,30,0,9,156,84,7,99,0,8,126,0,8,62,0,9,220,82,7,27,0,8,110,0,8,46,0,9,188,0,8,14,0,8,142,0,8,78,0,9,252,96,7,256,0,8,81,0,8,17,85,8,131,82,7,31,0,8,113,0,8,49,0,9,194,80,7,10,0,8,97,0,8,33,0,9,162,0,8,1,0,8,129,0,8,65,0,9,226,80,7,6,0,8,89,0,8,25,0,9,146,83,7,59,0,8,121,0,8,57,0,9,210,81,7,17,0,8,105,0,8,41,0,9,178,0,8,9,0,8,137,0,8,73,0,9,242,80,7,4,0,8,85,0,8,21,80,8,258,83,7,43,0,8,117,0,8,53,0,9,202,81,7,13,0,8,101,0,8,37,0,9,170,0,8,5,0,8,133,0,8,69,0,9,234,80,7,8,0,8,93,0,8,29,0,9,154,84,7,83,0,8,125,0,8,61,0,9,218,82,7,23,0,8,109,0,8,45,0,9,186,0,8,13,0,8,141,0,8,77,0,9,250,80,7,3,0,8,83,0,8,19,85,8,195,83,7,35,0,8,115,0,8,51,0,9,198,81,7,11,0,8,99,0,8,35,0,9,166,0,8,3,0,8,131,0,8,67,0,9,230,80,7,7,0,8,91,0,8,27,0,9,150,84,7,67,0,8,123,0,8,59,0,9,214,82,7,19,0,8,107,0,8,43,0,9,182,0,8,11,0,8,139,0,8,75,0,9,246,80,7,5,0,8,87,0,8,23,192,8,0,83,7,51,0,8,119,0,8,55,0,9,206,81,7,15,0,8,103,0,8,39,0,9,174,0,8,7,0,8,135,0,8,71,0,9,238,80,7,9,0,8,95,0,8,31,0,9,158,84,7,99,0,8,127,0,8,63,0,9,222,82,7,27,0,8,111,0,8,47,0,9,190,0,8,15,0,8,143,0,8,79,0,9,254,96,7,256,0,8,80,0,8,16,84,8,115,82,7,31,0,8,112,0,8,48,0,9,193,80,7,10,0,8,96,0,8,32,0,9,161,0,8,0,0,8,128,0,8,64,0,9,225,80,7,6,0,8,88,0,8,24,0,9,145,83,7,59,0,8,120,0,8,56,0,9,209,81,7,17,0,8,104,0,8,40,0,9,177,0,8,8,0,8,136,0,8,72,0,9,241,80,7,4,0,8,84,0,8,20,85,8,227,83,7,43,0,8,116,0,8,52,0,9,201,81,7,13,0,8,100,0,8,36,0,9,169,0,8,4,0,8,132,0,8,68,0,9,233,80,7,8,0,8,92,0,8,28,0,9,153,84,7,83,0,8,124,0,8,60,0,9,217,82,7,23,0,8,108,0,8,44,0,9,185,0,8,12,0,8,140,0,8,76,0,9,249,80,7,3,0,8,82,0,8,18,85,8,163,83,7,35,0,8,114,0,8,50,0,9,197,81,7,11,0,8,98,0,8,34,0,9,165,0,8,2,0,8,130,0,8,66,0,9,229,80,7,7,0,8,90,0,8,26,0,9,149,84,7,67,0,8,122,0,8,58,0,9,213,82,7,19,0,8,106,0,8,42,0,9,181,0,8,10,0,8,138,0,8,74,0,9,245,80,7,5,0,8,86,0,8,22,192,8,0,83,7,51,0,8,118,0,8,54,0,9,205,81,7,15,0,8,102,0,8,38,0,9,173,0,8,6,0,8,134,0,8,70,0,9,237,80,7,9,0,8,94,0,8,30,0,9,157,84,7,99,0,8,126,0,8,62,0,9,221,82,7,27,0,8,110,0,8,46,0,9,189,0,8,14,0,8,142,0,8,78,0,9,253,96,7,256,0,8,81,0,8,17,85,8,131,82,7,31,0,8,113,0,8,49,0,9,195,80,7,10,0,8,97,0,8,33,0,9,163,0,8,1,0,8,129,0,8,65,0,9,227,80,7,6,0,8,89,0,8,25,0,9,147,83,7,59,0,8,121,0,8,57,0,9,211,81,7,17,0,8,105,0,8,41,0,9,179,0,8,9,0,8,137,0,8,73,0,9,243,80,7,4,0,8,85,0,8,21,80,8,258,83,7,43,0,8,117,0,8,53,0,9,203,81,7,13,0,8,101,0,8,37,0,9,171,0,8,5,0,8,133,0,8,69,0,9,235,80,7,8,0,8,93,0,8,29,0,9,155,84,7,83,0,8,125,0,8,61,0,9,219,82,7,23,0,8,109,0,8,45,0,9,187,0,8,13,0,8,141,0,8,77,0,9,251,80,7,3,0,8,83,0,8,19,85,8,195,83,7,35,0,8,115,0,8,51,0,9,199,81,7,11,0,8,99,0,8,35,0,9,167,0,8,3,0,8,131,0,8,67,0,9,231,80,7,7,0,8,91,0,8,27,0,9,151,84,7,67,0,8,123,0,8,59,0,9,215,82,7,19,0,8,107,0,8,43,0,9,183,0,8,11,0,8,139,0,8,75,0,9,247,80,7,5,0,8,87,0,8,23,192,8,0,83,7,51,0,8,119,0,8,55,0,9,207,81,7,15,0,8,103,0,8,39,0,9,175,0,8,7,0,8,135,0,8,71,0,9,239,80,7,9,0,8,95,0,8,31,0,9,159,84,7,99,0,8,127,0,8,63,0,9,223,82,7,27,0,8,111,0,8,47,0,9,191,0,8,15,0,8,143,0,8,79,0,9,255],fixed_td=[80,5,1,87,5,257,83,5,17,91,5,4097,81,5,5,89,5,1025,85,5,65,93,5,16385,80,5,3,88,5,513,84,5,33,92,5,8193,82,5,9,90,5,2049,86,5,129,192,5,24577,80,5,2,87,5,385,83,5,25,91,5,6145,81,5,7,89,5,1537,85,5,97,93,5,24577,80,5,4,88,5,769,84,5,49,92,5,12289,82,5,13,90,5,3073,86,5,193,192,5,24577],cplens=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],cplext=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,112,112],cpdist=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577],cpdext=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13];function ZStream(){}function Inflate(){this.was=[0]}ZStream.prototype.inflateInit=function(t,i){return t=t||DEF_WBITS,i=i&&!1,this.istate=new Inflate,this.istate.inflateInit(this,i?-t:t)},ZStream.prototype.inflate=function(t){return null==this.istate?Z_STREAM_ERROR:this.istate.inflate(this,t)},ZStream.prototype.inflateEnd=function(){var t;return null==this.istate?Z_STREAM_ERROR:(t=istate.inflateEnd(this),this.istate=null,t)},ZStream.prototype.inflateSync=function(){return istate.inflateSync(this)},ZStream.prototype.inflateSetDictionary=function(t,i){return istate.inflateSetDictionary(this,t,i)},Inflate.prototype.inflateReset=function(t){return null==t||null==t.istate?Z_STREAM_ERROR:(t.total_in=t.total_out=0,t.msg=null,t.istate.mode=0!=t.istate.nowrap?BLOCKS:METHOD,t.istate.blocks.reset(t,null),Z_OK)},Inflate.prototype.inflateEnd=function(t){return null!=this.blocks&&this.blocks.free(t),this.blocks=null,Z_OK},Inflate.prototype.inflateInit=function(t,i){return t.msg=null,this.blocks=null,i<(nowrap=0)&&(i=-i,nowrap=1),i<8||15<i?(this.inflateEnd(t),Z_STREAM_ERROR):(this.wbits=i,t.istate.blocks=new InfBlocks(t,0!=t.istate.nowrap?null:this,1<<i),this.inflateReset(t),Z_OK)},Inflate.prototype.inflate=function(t,i){var e,n;if(null==t||null==t.istate||null==t.next_in)return Z_STREAM_ERROR;for(i=i==Z_FINISH?Z_BUF_ERROR:Z_OK,e=Z_BUF_ERROR;;)switch(t.istate.mode){case METHOD:if(0==t.avail_in)return e;if(e=i,t.avail_in--,t.total_in++,(15&(t.istate.method=t.next_in[t.next_in_index++]))!=Z_DEFLATED){t.istate.mode=BAD,t.msg="unknown compression method",t.istate.marker=5;break}if(8+(t.istate.method>>4)>t.istate.wbits){t.istate.mode=BAD,t.msg="invalid window size",t.istate.marker=5;break}t.istate.mode=FLAG;case FLAG:if(0==t.avail_in)return e;if(e=i,t.avail_in--,t.total_in++,n=255&t.next_in[t.next_in_index++],((t.istate.method<<8)+n)%31!=0){t.istate.mode=BAD,t.msg="incorrect header check",t.istate.marker=5;break}if(0==(n&PRESET_DICT)){t.istate.mode=BLOCKS;break}t.istate.mode=DICT4;case DICT4:if(0==t.avail_in)return e;e=i,t.avail_in--,t.total_in++,t.istate.need=(255&t.next_in[t.next_in_index++])<<24&4278190080,t.istate.mode=DICT3;case DICT3:if(0==t.avail_in)return e;e=i,t.avail_in--,t.total_in++,t.istate.need+=(255&t.next_in[t.next_in_index++])<<16&16711680,t.istate.mode=DICT2;case DICT2:if(0==t.avail_in)return e;e=i,t.avail_in--,t.total_in++,t.istate.need+=(255&t.next_in[t.next_in_index++])<<8&65280,t.istate.mode=DICT1;case DICT1:return 0==t.avail_in?e:(e=i,t.avail_in--,t.total_in++,t.istate.need+=255&t.next_in[t.next_in_index++],t.adler=t.istate.need,t.istate.mode=DICT0,Z_NEED_DICT);case DICT0:return t.istate.mode=BAD,t.msg="need dictionary",t.istate.marker=0,Z_STREAM_ERROR;case BLOCKS:if((e=t.istate.blocks.proc(t,e))==Z_DATA_ERROR){t.istate.mode=BAD,t.istate.marker=0;break}if((e=e==Z_OK?i:e)!=Z_STREAM_END)return e;if(e=i,t.istate.blocks.reset(t,t.istate.was),0!=t.istate.nowrap){t.istate.mode=DONE;break}t.istate.mode=CHECK4;case CHECK4:if(0==t.avail_in)return e;e=i,t.avail_in--,t.total_in++,t.istate.need=(255&t.next_in[t.next_in_index++])<<24&4278190080,t.istate.mode=CHECK3;case CHECK3:if(0==t.avail_in)return e;e=i,t.avail_in--,t.total_in++,t.istate.need+=(255&t.next_in[t.next_in_index++])<<16&16711680,t.istate.mode=CHECK2;case CHECK2:if(0==t.avail_in)return e;e=i,t.avail_in--,t.total_in++,t.istate.need+=(255&t.next_in[t.next_in_index++])<<8&65280,t.istate.mode=CHECK1;case CHECK1:if(0==t.avail_in)return e;if(e=i,t.avail_in--,t.total_in++,t.istate.need+=255&t.next_in[t.next_in_index++],t.istate.was[0]!=t.istate.need){t.istate.mode=BAD,t.msg="incorrect data check",t.istate.marker=5;break}t.istate.mode=DONE;case DONE:return Z_STREAM_END;case BAD:return Z_DATA_ERROR;default:return Z_STREAM_ERROR}},Inflate.prototype.inflateSetDictionary=function(t,i,e){var n=0,s=e;return null==t||null==t.istate||t.istate.mode!=DICT0?Z_STREAM_ERROR:t._adler.adler32(1,i,0,e)!=t.adler?Z_DATA_ERROR:(t.adler=t._adler.adler32(0,null,0,0),s>=1<<t.istate.wbits&&(n=e-(s=(1<<t.istate.wbits)-1)),t.istate.blocks.set_dictionary(i,n,s),t.istate.mode=BLOCKS,Z_OK)};var mark=[0,0,255,255],INFBLOCKS_BORDER=(Inflate.prototype.inflateSync=function(t){var i,e,n,s,_;if(null==t||null==t.istate)return Z_STREAM_ERROR;if(t.istate.mode!=BAD&&(t.istate.mode=BAD,t.istate.marker=0),0==(i=t.avail_in))return Z_BUF_ERROR;for(e=t.next_in_index,n=t.istate.marker;0!=i&&n<4;)t.next_in[e]==mark[n]?n++:n=0!=t.next_in[e]?0:4-n,e++,i--;return t.total_in+=e-t.next_in_index,t.next_in_index=e,t.avail_in=i,4!=(t.istate.marker=n)?Z_DATA_ERROR:(s=t.total_in,_=t.total_out,this.inflateReset(t),t.total_in=s,t.total_out=_,t.istate.mode=BLOCKS,Z_OK)},Inflate.prototype.inflateSyncPoint=function(t){return null==t||null==t.istate||null==t.istate.blocks?Z_STREAM_ERROR:t.istate.blocks.sync_point()},[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);function InfBlocks(t,i,e){this.hufts=new Int32Array(3*MANY),this.window=new Uint8Array(e),this.end=e,this.checkfn=i,this.mode=IB_TYPE,this.reset(t,null),this.left=0,this.table=0,this.index=0,this.blens=null,this.bb=new Int32Array(1),this.tb=new Int32Array(1),this.codes=new InfCodes,this.last=0,this.bitk=0,this.bitb=0,this.read=0,this.write=0,this.check=0,this.inftree=new InfTree}InfBlocks.prototype.reset=function(t,i){i&&(i[0]=this.check),this.mode==IB_CODES&&this.codes.free(t),this.mode=IB_TYPE,this.bitk=0,this.bitb=0,this.read=this.write=0,this.checkfn&&(t.adler=this.check=t._adler.adler32(0,null,0,0))},InfBlocks.prototype.proc=function(t,i){for(var e,n=t.next_in_index,s=t.avail_in,_=this.bitb,a=this.bitk,r=(e=this.write)<this.read?this.read-e-1:this.end-e;;)switch(this.mode){case IB_TYPE:for(;a<3;){if(0==s)return this.bitb=_,this.bitk=a,t.avail_in=s,t.total_in+=n-t.next_in_index,t.next_in_index=n,this.write=e,this.inflate_flush(t,i);i=Z_OK,s--,_|=(255&t.next_in[n++])<<a,a+=8}switch(this.last=1&(d=7&_),d>>>1){case 0:_=_>>>3>>>(d=7&(a-=3)),a-=d,this.mode=IB_LENS;break;case 1:inflate_trees_fixed(f=new Int32Array(1),x=new Int32Array(1),u=[],b=[],t),this.codes.init(f[0],x[0],u[0],0,b[0],0,t),_>>>=3,a-=3,this.mode=IB_CODES;break;case 2:_>>>=3,a-=3,this.mode=IB_TABLE;break;case 3:return _>>>=3,a-=3,this.mode=BAD,t.msg="invalid block type",i=Z_DATA_ERROR,this.bitb=_,this.bitk=a,t.avail_in=s,t.total_in+=n-t.next_in_index,t.next_in_index=n,this.write=e,this.inflate_flush(t,i)}break;case IB_LENS:for(;a<32;){if(0==s)return this.bitb=_,this.bitk=a,t.avail_in=s,t.total_in+=n-t.next_in_index,t.next_in_index=n,this.write=e,this.inflate_flush(t,i);i=Z_OK,s--,_|=(255&t.next_in[n++])<<a,a+=8}if((~_>>>16&65535)!=(65535&_))return this.mode=BAD,t.msg="invalid stored block lengths",i=Z_DATA_ERROR,this.bitb=_,this.bitk=a,t.avail_in=s,t.total_in+=n-t.next_in_index,t.next_in_index=n,this.write=e,this.inflate_flush(t,i);this.left=65535&_,_=a=0,this.mode=0!=this.left?IB_STORED:0!=this.last?IB_DRY:IB_TYPE;break;case IB_STORED:if(0==s)return this.bitb=_,this.bitk=a,t.avail_in=s,t.total_in+=n-t.next_in_index,t.next_in_index=n,write=e,this.inflate_flush(t,i);if(0==r&&0==(r=e==end&&0!=read?(e=0)<this.read?this.read-e-1:this.end-e:r)&&(this.write=e,i=this.inflate_flush(t,i),r=(e=this.write)<this.read?this.read-e-1:this.end-e,0==(r=e==this.end&&0!=this.read?(e=0)<this.read?this.read-e-1:this.end-e:r)))return this.bitb=_,this.bitk=a,t.avail_in=s,t.total_in+=n-t.next_in_index,t.next_in_index=n,this.write=e,this.inflate_flush(t,i);i=Z_OK,r<(d=s<(d=this.left)?s:d)&&(d=r),arrayCopy(t.next_in,n,this.window,e,d),n+=d,s-=d,e+=d,r-=d,0==(this.left-=d)&&(this.mode=0!=this.last?IB_DRY:IB_TYPE);break;case IB_TABLE:for(;a<14;){if(0==s)return this.bitb=_,this.bitk=a,t.avail_in=s,t.total_in+=n-t.next_in_index,t.next_in_index=n,this.write=e,this.inflate_flush(t,i);i=Z_OK,s--,_|=(255&t.next_in[n++])<<a,a+=8}if(this.table=d=16383&_,29<(31&d)||29<(d>>5&31))return this.mode=IB_BAD,t.msg="too many length or distance symbols",i=Z_DATA_ERROR,this.bitb=_,this.bitk=a,t.avail_in=s,t.total_in+=n-t.next_in_index,t.next_in_index=n,this.write=e,this.inflate_flush(t,i);if(d=258+(31&d)+(d>>5&31),null==this.blens||this.blens.length<d)this.blens=new Int32Array(d);else for(var h=0;h<d;h++)this.blens[h]=0;_>>>=14,a-=14,this.index=0,mode=IB_BTREE;case IB_BTREE:for(;this.index<4+(this.table>>>10);){for(;a<3;){if(0==s)return this.bitb=_,this.bitk=a,t.avail_in=s,t.total_in+=n-t.next_in_index,t.next_in_index=n,this.write=e,this.inflate_flush(t,i);i=Z_OK,s--,_|=(255&t.next_in[n++])<<a,a+=8}this.blens[INFBLOCKS_BORDER[this.index++]]=7&_,_>>>=3,a-=3}for(;this.index<19;)this.blens[INFBLOCKS_BORDER[this.index++]]=0;if(this.bb[0]=7,(d=this.inftree.inflate_trees_bits(this.blens,this.bb,this.tb,this.hufts,t))!=Z_OK)return(i=d)==Z_DATA_ERROR&&(this.blens=null,this.mode=IB_BAD),this.bitb=_,this.bitk=a,t.avail_in=s,t.total_in+=n-t.next_in_index,t.next_in_index=n,write=e,this.inflate_flush(t,i);this.index=0,this.mode=IB_DTREE;case IB_DTREE:for(;;){if(d=this.table,!(this.index<258+(31&d)+(d>>5&31)))break;for(var l,o,d=this.bb[0];a<d;){if(0==s)return this.bitb=_,this.bitk=a,t.avail_in=s,t.total_in+=n-t.next_in_index,t.next_in_index=n,this.write=e,this.inflate_flush(t,i);i=Z_OK,s--,_|=(255&t.next_in[n++])<<a,a+=8}if(d=this.hufts[3*(this.tb[0]+(_&inflate_mask[d]))+1],(o=this.hufts[3*(this.tb[0]+(_&inflate_mask[d]))+2])<16)_>>>=d,a-=d,this.blens[this.index++]=o;else{for(h=18==o?7:o-14,l=18==o?11:3;a<d+h;){if(0==s)return this.bitb=_,this.bitk=a,t.avail_in=s,t.total_in+=n-t.next_in_index,t.next_in_index=n,this.write=e,this.inflate_flush(t,i);i=Z_OK,s--,_|=(255&t.next_in[n++])<<a,a+=8}if(a-=d,l+=(_>>>=d)&inflate_mask[h],_>>>=h,a-=h,h=this.index,258+(31&(d=this.table))+(d>>5&31)<h+l||16==o&&h<1)return this.blens=null,this.mode=IB_BAD,t.msg="invalid bit length repeat",i=Z_DATA_ERROR,this.bitb=_,this.bitk=a,t.avail_in=s,t.total_in+=n-t.next_in_index,t.next_in_index=n,this.write=e,this.inflate_flush(t,i);for(o=16==o?this.blens[h-1]:0;this.blens[h++]=o,0!=--l;);this.index=h}}this.tb[0]=-1;var f=new Int32Array(1),x=new Int32Array(1),u=new Int32Array(1),b=new Int32Array(1);if(f[0]=9,x[0]=6,d=this.table,(d=this.inftree.inflate_trees_dynamic(257+(31&d),1+(d>>5&31),this.blens,f,x,u,b,this.hufts,t))!=Z_OK)return d==Z_DATA_ERROR&&(this.blens=null,this.mode=BAD),i=d,this.bitb=_,this.bitk=a,t.avail_in=s,t.total_in+=n-t.next_in_index,t.next_in_index=n,this.write=e,this.inflate_flush(t,i);this.codes.init(f[0],x[0],this.hufts,u[0],this.hufts,b[0],t),this.mode=IB_CODES;case IB_CODES:if(this.bitb=_,this.bitk=a,t.avail_in=s,t.total_in+=n-t.next_in_index,t.next_in_index=n,this.write=e,(i=this.codes.proc(this,t,i))!=Z_STREAM_END)return this.inflate_flush(t,i);if(i=Z_OK,this.codes.free(t),n=t.next_in_index,s=t.avail_in,_=this.bitb,a=this.bitk,r=(e=this.write)<this.read?this.read-e-1:this.end-e,0==this.last){this.mode=IB_TYPE;break}this.mode=IB_DRY;case IB_DRY:if(this.write=e,i=this.inflate_flush(t,i),r=(e=this.write)<this.read?this.read-e-1:this.end-e,this.read!=this.write)return this.bitb=_,this.bitk=a,t.avail_in=s,t.total_in+=n-t.next_in_index,t.next_in_index=n,this.write=e,this.inflate_flush(t,i);mode=DONE;case IB_DONE:return i=Z_STREAM_END,this.bitb=_,this.bitk=a,t.avail_in=s,t.total_in+=n-t.next_in_index,t.next_in_index=n,this.write=e,this.inflate_flush(t,i);case IB_BAD:return i=Z_DATA_ERROR,this.bitb=_,this.bitk=a,t.avail_in=s,t.total_in+=n-t.next_in_index,t.next_in_index=n,this.write=e,this.inflate_flush(t,i);default:return i=Z_STREAM_ERROR,this.bitb=_,this.bitk=a,t.avail_in=s,t.total_in+=n-t.next_in_index,t.next_in_index=n,this.write=e,this.inflate_flush(t,i)}},InfBlocks.prototype.free=function(t){this.reset(t,null),this.window=null,this.hufts=null},InfBlocks.prototype.set_dictionary=function(t,i,e){arrayCopy(t,i,window,0,e),this.read=this.write=e},InfBlocks.prototype.sync_point=function(){return this.mode==IB_LENS},InfBlocks.prototype.inflate_flush=function(t,i){var e=t.next_out_index,n=this.read,s=(n<=this.write?this.write:this.end)-n;return 0!=(s=s>t.avail_out?t.avail_out:s)&&i==Z_BUF_ERROR&&(i=Z_OK),t.avail_out-=s,t.total_out+=s,null!=this.checkfn&&(t.adler=this.check=t._adler.adler32(this.check,this.window,n,s)),arrayCopy(this.window,n,t.next_out,e,s),e+=s,(n+=s)==this.end&&(n=0,this.write==this.end&&(this.write=0),0!=(s=(s=this.write-n)>t.avail_out?t.avail_out:s)&&i==Z_BUF_ERROR&&(i=Z_OK),t.avail_out-=s,t.total_out+=s,null!=this.checkfn&&(t.adler=this.check=t._adler.adler32(this.check,this.window,n,s)),arrayCopy(this.window,n,t.next_out,e,s),e+=s,n+=s),t.next_out_index=e,this.read=n,i};var IC_START=0,IC_LEN=1,IC_LENEXT=2,IC_DIST=3,IC_DISTEXT=4,IC_COPY=5,IC_LIT=6,IC_WASH=7,IC_END=8,IC_BADCODE=9;function InfCodes(){}function InfTree(){}function inflate_trees_fixed(t,i,e,n,s){return t[0]=fixed_bl,i[0]=fixed_bd,e[0]=fixed_tl,n[0]=fixed_td,Z_OK}InfCodes.prototype.init=function(t,i,e,n,s,_,a){this.mode=IC_START,this.lbits=t,this.dbits=i,this.ltree=e,this.ltree_index=n,this.dtree=s,this.dtree_index=_,this.tree=null},InfCodes.prototype.proc=function(t,i,e){for(var n,s,_,a,r=0,h=0,l=0,l=i.next_in_index,o=i.avail_in,r=t.bitb,h=t.bitk,d=t.write,f=d<t.read?t.read-d-1:t.end-d;;)switch(this.mode){case IC_START:if(258<=f&&10<=o&&(t.bitb=r,t.bitk=h,i.avail_in=o,i.total_in+=l-i.next_in_index,i.next_in_index=l,t.write=d,e=this.inflate_fast(this.lbits,this.dbits,this.ltree,this.ltree_index,this.dtree,this.dtree_index,t,i),l=i.next_in_index,o=i.avail_in,r=t.bitb,h=t.bitk,f=(d=t.write)<t.read?t.read-d-1:t.end-d,e!=Z_OK)){this.mode=e==Z_STREAM_END?IC_WASH:IC_BADCODE;break}this.need=this.lbits,this.tree=this.ltree,this.tree_index=this.ltree_index,this.mode=IC_LEN;case IC_LEN:for(n=this.need;h<n;){if(0==o)return t.bitb=r,t.bitk=h,i.avail_in=o,i.total_in+=l-i.next_in_index,i.next_in_index=l,t.write=d,t.inflate_flush(i,e);e=Z_OK,o--,r|=(255&i.next_in[l++])<<h,h+=8}if(s=3*(this.tree_index+(r&inflate_mask[n])),r>>>=this.tree[s+1],h-=this.tree[s+1],0==(_=this.tree[s]))this.lit=this.tree[s+2],this.mode=IC_LIT;else if(0!=(16&_))this.get=15&_,this.len=this.tree[s+2],this.mode=IC_LENEXT;else if(0==(64&_))this.need=_,this.tree_index=s/3+this.tree[s+2];else{if(0==(32&_))return this.mode=IC_BADCODE,i.msg="invalid literal/length code",e=Z_DATA_ERROR,t.bitb=r,t.bitk=h,i.avail_in=o,i.total_in+=l-i.next_in_index,i.next_in_index=l,t.write=d,t.inflate_flush(i,e);this.mode=IC_WASH}break;case IC_LENEXT:for(n=this.get;h<n;){if(0==o)return t.bitb=r,t.bitk=h,i.avail_in=o,i.total_in+=l-i.next_in_index,i.next_in_index=l,t.write=d,t.inflate_flush(i,e);e=Z_OK,o--,r|=(255&i.next_in[l++])<<h,h+=8}this.len+=r&inflate_mask[n],r>>=n,h-=n,this.need=this.dbits,this.tree=this.dtree,this.tree_index=this.dtree_index,this.mode=IC_DIST;case IC_DIST:for(n=this.need;h<n;){if(0==o)return t.bitb=r,t.bitk=h,i.avail_in=o,i.total_in+=l-i.next_in_index,i.next_in_index=l,t.write=d,t.inflate_flush(i,e);e=Z_OK,o--,r|=(255&i.next_in[l++])<<h,h+=8}if(s=3*(this.tree_index+(r&inflate_mask[n])),r>>=this.tree[s+1],h-=this.tree[s+1],0!=(16&(_=this.tree[s])))this.get=15&_,this.dist=this.tree[s+2],this.mode=IC_DISTEXT;else{if(0!=(64&_))return this.mode=IC_BADCODE,i.msg="invalid distance code",e=Z_DATA_ERROR,t.bitb=r,t.bitk=h,i.avail_in=o,i.total_in+=l-i.next_in_index,i.next_in_index=l,t.write=d,t.inflate_flush(i,e);this.need=_,this.tree_index=s/3+this.tree[s+2]}break;case IC_DISTEXT:for(n=this.get;h<n;){if(0==o)return t.bitb=r,t.bitk=h,i.avail_in=o,i.total_in+=l-i.next_in_index,i.next_in_index=l,t.write=d,t.inflate_flush(i,e);e=Z_OK,o--,r|=(255&i.next_in[l++])<<h,h+=8}this.dist+=r&inflate_mask[n],r>>=n,h-=n,this.mode=IC_COPY;case IC_COPY:for(a=d-this.dist;a<0;)a+=t.end;for(;0!=this.len;){if(0==f&&0==(f=d==t.end&&0!=t.read?(d=0)<t.read?t.read-d-1:t.end-d:f)&&(t.write=d,e=t.inflate_flush(i,e),f=(d=t.write)<t.read?t.read-d-1:t.end-d,0==(f=d==t.end&&0!=t.read?(d=0)<t.read?t.read-d-1:t.end-d:f)))return t.bitb=r,t.bitk=h,i.avail_in=o,i.total_in+=l-i.next_in_index,i.next_in_index=l,t.write=d,t.inflate_flush(i,e);t.window[d++]=t.window[a++],f--,a==t.end&&(a=0),this.len--}this.mode=IC_START;break;case IC_LIT:if(0==f&&0==(f=d==t.end&&0!=t.read?(d=0)<t.read?t.read-d-1:t.end-d:f)&&(t.write=d,e=t.inflate_flush(i,e),f=(d=t.write)<t.read?t.read-d-1:t.end-d,0==(f=d==t.end&&0!=t.read?(d=0)<t.read?t.read-d-1:t.end-d:f)))return t.bitb=r,t.bitk=h,i.avail_in=o,i.total_in+=l-i.next_in_index,i.next_in_index=l,t.write=d,t.inflate_flush(i,e);e=Z_OK,t.window[d++]=this.lit,f--,this.mode=IC_START;break;case IC_WASH:if(7<h&&(h-=8,o++,l--),t.write=d,e=t.inflate_flush(i,e),f=(d=t.write)<t.read?t.read-d-1:t.end-d,t.read!=t.write)return t.bitb=r,t.bitk=h,i.avail_in=o,i.total_in+=l-i.next_in_index,i.next_in_index=l,t.write=d,t.inflate_flush(i,e);this.mode=IC_END;case IC_END:return e=Z_STREAM_END,t.bitb=r,t.bitk=h,i.avail_in=o,i.total_in+=l-i.next_in_index,i.next_in_index=l,t.write=d,t.inflate_flush(i,e);case IC_BADCODE:return e=Z_DATA_ERROR,t.bitb=r,t.bitk=h,i.avail_in=o,i.total_in+=l-i.next_in_index,i.next_in_index=l,t.write=d,t.inflate_flush(i,e);default:return e=Z_STREAM_ERROR,t.bitb=r,t.bitk=h,i.avail_in=o,i.total_in+=l-i.next_in_index,i.next_in_index=l,t.write=d,t.inflate_flush(i,e)}},InfCodes.prototype.free=function(t){},InfCodes.prototype.inflate_fast=function(t,i,e,n,s,_,a,r){var h,l,o,d,f,x,u,b,R=r.next_in_index,E=r.avail_in,c=a.bitb,A=a.bitk,I=a.write,w=I<a.read?a.read-I-1:a.end-I,D=inflate_mask[t],m=inflate_mask[i];do{for(;A<20;)E--,c|=(255&r.next_in[R++])<<A,A+=8;if(0==(d=(l=e)[b=3*((o=n)+(h=c&D))]))c>>=l[b+1],A-=l[b+1],a.window[I++]=l[b+2],w--;else for(;;){if(c>>=l[b+1],A-=l[b+1],0!=(16&d)){for(d&=15,f=l[b+2]+(c&inflate_mask[d]),c>>=d,A-=d;A<15;)E--,c|=(255&r.next_in[R++])<<A,A+=8;for(d=(l=s)[b=3*((o=_)+(h=c&m))];;){if(c>>=l[b+1],A-=l[b+1],0!=(16&d)){for(d&=15;A<d;)E--,c|=(255&r.next_in[R++])<<A,A+=8;if(x=l[b+2]+(c&inflate_mask[d]),c>>=d,A-=d,w-=f,x<=I)u=I-x,a.window[I++]=a.window[u++],a.window[I++]=a.window[u++],f-=2;else{for(u=I-x;(u+=a.end)<0;);if((d=a.end-u)<f){if(f-=d,0<I-u&&I-u<d)for(;a.window[I++]=a.window[u++],0!=--d;);else arrayCopy(a.window,u,a.window,I,d),I+=d,u+=d,d=0;u=0}}for(;a.window[I++]=a.window[u++],0!=--f;);break}if(0!=(64&d))return r.msg="invalid distance code",E+=f=A>>3<(f=r.avail_in-E)?A>>3:f,R-=f,A-=f<<3,a.bitb=c,a.bitk=A,r.avail_in=E,r.total_in+=R-r.next_in_index,r.next_in_index=R,a.write=I,Z_DATA_ERROR;d=l[b=3*(o+(h=(h+=l[b+2])+(c&inflate_mask[d])))]}break}if(0!=(64&d))return 0!=(32&d)?(E+=f=A>>3<(f=r.avail_in-E)?A>>3:f,R-=f,A-=f<<3,a.bitb=c,a.bitk=A,r.avail_in=E,r.total_in+=R-r.next_in_index,r.next_in_index=R,a.write=I,Z_STREAM_END):(r.msg="invalid literal/length code",E+=f=A>>3<(f=r.avail_in-E)?A>>3:f,R-=f,A-=f<<3,a.bitb=c,a.bitk=A,r.avail_in=E,r.total_in+=R-r.next_in_index,r.next_in_index=R,a.write=I,Z_DATA_ERROR);if(0==(d=l[b=3*(o+(h=(h+=l[b+2])+(c&inflate_mask[d])))])){c>>=l[b+1],A-=l[b+1],a.window[I++]=l[b+2],w--;break}}}while(258<=w&&10<=E);return E+=f=A>>3<(f=r.avail_in-E)?A>>3:f,R-=f,A-=f<<3,a.bitb=c,a.bitk=A,r.avail_in=E,r.total_in+=R-r.next_in_index,r.next_in_index=R,a.write=I,Z_OK},InfTree.prototype.huft_build=function(t,i,e,n,s,_,a,r,h,l,o){for(var d,f,x,u,b,R,E,c,A,I,w,D,m,T=0,O=e;this.c[t[i+T]]++,T++,0!=--O;);if(this.c[0]==e)return a[0]=-1,r[0]=0,Z_OK;for(E=r[0],b=1;b<=BMAX&&0==this.c[b];b++);for(E<(R=b)&&(E=b),O=BMAX;0!=O&&0==this.c[O];O--);for((x=O)<E&&(E=O),r[0]=E,D=1<<b;b<O;b++,D<<=1)if((D-=this.c[b])<0)return Z_DATA_ERROR;if((D-=this.c[O])<0)return Z_DATA_ERROR;for(this.c[O]+=D,this.x[1]=b=0,T=1,w=2;0!=--O;)this.x[w]=b+=this.c[T],w++,T++;for(T=O=0;0!=(b=t[i+T])&&(this.v[this.x[b]++]=O),T++,++O<e;);for(e=this.x[x],this.x[0]=O=0,u=-1,I=-E,m=A=this.u[T=0]=0;R<=x;R++)for(d=this.c[R];0!=d--;){for(;I+E<R;){if(u++,m=E<(m=x-(I+=E))?E:m,(f=1<<(b=R-I))>d+1&&(f-=d+1,w=R,b<m))for(;++b<m&&!((f<<=1)<=this.c[++w]);)f-=this.c[w];if(this.hn[0]+(m=1<<b)>MANY)return Z_DATA_ERROR;this.u[u]=A=this.hn[0],this.hn[0]+=m,0!=u?(this.x[u]=O,this.r[0]=b,this.r[1]=E,this.r[2]=A-this.u[u-1]-(b=O>>>I-E),arrayCopy(this.r,0,h,3*(this.u[u-1]+b),3)):a[0]=A}for(this.r[1]=R-I,e<=T?this.r[0]=192:o[T]<n?(this.r[0]=this.v[T]<256?0:96,this.r[2]=this.v[T++]):(this.r[0]=_[this.v[T]-n]+16+64,this.r[2]=s[this.v[T++]-n]),f=1<<R-I,b=O>>>I;b<m;b+=f)arrayCopy(this.r,0,h,3*(A+b),3);for(b=1<<R-1;0!=(O&b);b>>>=1)O^=b;for(O^=b,c=(1<<I)-1;(O&c)!=this.x[u];)u--,c=(1<<(I-=E))-1}return 0!=D&&1!=x?Z_BUF_ERROR:Z_OK},InfTree.prototype.inflate_trees_bits=function(t,i,e,n,s){return this.initWorkArea(19),this.hn[0]=0,(t=this.huft_build(t,0,19,19,null,null,e,i,n,this.hn,this.v))==Z_DATA_ERROR?s.msg="oversubscribed dynamic bit lengths tree":t!=Z_BUF_ERROR&&0!=i[0]||(s.msg="incomplete dynamic bit lengths tree",t=Z_DATA_ERROR),t},InfTree.prototype.inflate_trees_dynamic=function(t,i,e,n,s,_,a,r,h){return this.initWorkArea(288),this.hn[0]=0,(_=this.huft_build(e,0,t,257,cplens,cplext,_,n,r,this.hn,this.v))!=Z_OK||0==n[0]?(_==Z_DATA_ERROR?h.msg="oversubscribed literal/length tree":_!=Z_MEM_ERROR&&(h.msg="incomplete literal/length tree",_=Z_DATA_ERROR),_):(this.initWorkArea(288),(_=this.huft_build(e,t,i,0,cpdist,cpdext,a,s,r,this.hn,this.v))!=Z_OK||0==s[0]&&257<t?(_==Z_DATA_ERROR?h.msg="oversubscribed distance tree":_==Z_BUF_ERROR?(h.msg="incomplete distance tree",_=Z_DATA_ERROR):_!=Z_MEM_ERROR&&(h.msg="empty distance tree with lengths",_=Z_DATA_ERROR),_):Z_OK)},InfTree.prototype.initWorkArea=function(t){null==this.hn&&(this.hn=new Int32Array(1),this.v=new Int32Array(t),this.c=new Int32Array(BMAX+1),this.r=new Int32Array(3),this.u=new Int32Array(BMAX),this.x=new Int32Array(BMAX+1)),this.v.length<t&&(this.v=new Int32Array(t));for(var i=0;i<t;i++)this.v[i]=0;for(i=0;i<BMAX+1;i++)this.c[i]=0;for(i=0;i<3;i++)this.r[i]=0;arrayCopy(this.c,0,this.u,0,BMAX),arrayCopy(this.c,0,this.x,0,BMAX+1)};var testArray=new Uint8Array(1),hasSubarray="function"==typeof testArray.subarray,hasSlice=!1;function arrayCopy(t,i,e,n,s){if(0!=s){if(!t)throw"Undef src";if(!e)throw"Undef dest";0==i&&s==t.length?arrayCopy_fast(t,e,n):hasSubarray?arrayCopy_fast(t.subarray(i,i+s),e,n):1==t.BYTES_PER_ELEMENT&&100<s?arrayCopy_fast(new Uint8Array(t.buffer,t.byteOffset+i,s),e,n):arrayCopy_slow(t,i,e,n,s)}}function arrayCopy_slow(t,i,e,n,s){for(var _=0;_<s;++_)e[n+_]=t[i+_]}function arrayCopy_fast(t,i,e){i.set(t,e)}var ADLER_BASE=65521,ADLER_NMAX=5552;function adler32(t,i,e,n){if(null==i)return 1;for(var s,_=65535&t,a=t>>16&65535;0<n;){for(n-=s=n<ADLER_NMAX?n:ADLER_NMAX;16<=s;)a=(a=(a=(a=(a=(a=(a=(a=(a=(a=(a=(a=(a=(a=(a=(a+=_+=255&i[e++])+(_+=255&i[e++]))+(_+=255&i[e++]))+(_+=255&i[e++]))+(_+=255&i[e++]))+(_+=255&i[e++]))+(_+=255&i[e++]))+(_+=255&i[e++]))+(_+=255&i[e++]))+(_+=255&i[e++]))+(_+=255&i[e++]))+(_+=255&i[e++]))+(_+=255&i[e++]))+(_+=255&i[e++]))+(_+=255&i[e++]))+(_+=255&i[e++]),s-=16;if(0!=s)for(;a+=_+=255&i[e++],0!=--s;);_%=ADLER_BASE,a%=ADLER_BASE}return a<<16|_}function jszlib_inflate_buffer(t,i,e,n){t=i?e?new Uint8Array(t,i,e):new Uint8Array(t,i,t.byteLength-i):new Uint8Array(t);for(var s=new ZStream,_=(s.inflateInit(DEF_WBITS,!0),s.next_in=t,s.next_in_index=0,s.avail_in=t.length,[]),a=0;;){var r,h=new Uint8Array(32e3),l=(s.next_out=h,s.next_out_index=0,s.avail_out=h.length,s.inflate(Z_NO_FLUSH));if(l!=Z_OK&&l!=Z_STREAM_END&&l!=Z_BUF_ERROR)throw s.msg;if(0!=s.avail_out&&(arrayCopy(h,0,r=new Uint8Array(h.length-s.avail_out),0,h.length-s.avail_out),h=r),_.push(h),a+=h.length,l==Z_STREAM_END||l==Z_BUF_ERROR)break}if(n&&(n[0]=(i||0)+s.next_in_index),1==_.length)return _[0].buffer;for(var o=new Uint8Array(a),d=0,f=0;f<_.length;++f){var x=_[f];arrayCopy(x,0,o,d,x.length),d+=x.length}return o.buffer}"undefined"!=typeof module&&(module.exports={inflateBuffer:jszlib_inflate_buffer,arrayCopy:arrayCopy});